services:
  etcd1:
    image: "bitnami/etcd:3.5"
    container_name: etcd1
    environment:
      - ETCD_NAME=etcd1
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    healthcheck:
      test: [ "CMD-SHELL", "etcdctl endpoint health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  etcd2:
    image: "bitnami/etcd:3.5"
    container_name: etcd2
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd2
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd2:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd2:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    healthcheck:
      test: [ "CMD-SHELL", "etcdctl endpoint health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  etcd3:
    image: "bitnami/etcd:3.5"
    container_name: etcd3
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd3
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd3:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd3:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    healthcheck:
      test: [ "CMD-SHELL", "etcdctl endpoint health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  haproxy:
    image: "bitnami/haproxy:3"
    container_name: haproxy
    ports:
      - "5001:5000"
      - "8404:8404"
    healthcheck:
      test: [ "CMD", "pgrep", "haproxy" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./haproxy/haproxy.cfg:/bitnami/haproxy/conf/haproxy.cfg
    depends_on:
      patroni1:
        condition: service_healthy
      patroni2:
        condition: service_healthy
      patroni3:
        condition: service_healthy

  patroni1:
    build: patroni
    container_name: patroni1
    hostname: patroni1
    environment:
      PATRONI_NAME: patroni1
    volumes:
      - patroni1:/data/patroni
      - ./patroni/setup.sh:/usr/local/bin/scripts/setup.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h $(hostname) -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy

  patroni2:
    build: patroni
    container_name: patroni2
    hostname: patroni2
    environment:
      PATRONI_NAME: patroni2
    volumes:
      - patroni2:/data/patroni
      - ./patroni/setup.sh:/usr/local/bin/scripts/setup.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h $(hostname) -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy

  patroni3:
    build: patroni
    container_name: patroni3
    hostname: patroni3
    environment:
      PATRONI_NAME: patroni3
    volumes:
      - patroni3:/data/patroni
      - ./patroni/setup.sh:/usr/local/bin/scripts/setup.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h $(hostname) -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy

volumes:
  patroni1:
  patroni2:
  patroni3:
